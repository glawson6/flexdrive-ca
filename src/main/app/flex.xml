<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:oauth2="http://www.mulesoft.org/schema/mule/oauth2" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:context="http://www.springframework.org/schema/context" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" version="EE-3.7.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-current.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/oauth2 http://www.mulesoft.org/schema/mule/oauth2/current/mule-oauth2.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd">
    <http:listener-config name="HTTP_Listener_Configuration" host="0.0.0.0" port="8082" basePath="flex" doc:name="HTTP Listener Configuration"/>
    <context:property-placeholder location="${mule.env}.properties"/>
    <http:request-config name="ManheimEventsSuscribe" protocol="HTTPS" host="sandbox.api.manheim.com" port="8090" basePath="events/subscriber/${token}" doc:name="HTTP Request Configuration">
        
    </http:request-config>
    <http:listener-config name="Manheim_listener" host="0.0.0.0" port="${port_0}" basePath="flexDrive" doc:name="HTTP Listener Configuration"/>
    <http:request-config name="HTTP_Request_Configuration" host="www.rentcentric.com" port="${port_rentCentric}" basePath="push" doc:name="HTTP Request Configuration"/>
    <http:request-config name="HTTP_Request_Configuration1" protocol="HTTPS" host="sandbox.api.manheim.com" port="443" basePath="oauth2/token" doc:name="HTTP Request Configuration">
        <http:basic-authentication username="duubmuahmy7hb4ftchnmnjcm" password="44fcTw2HdY" />
    </http:request-config>
    <http:listener-config name="HTTP_Listener_Configuration1" host="0.0.0.0" port="8086" doc:name="HTTP Listener Configuration"/>
    <http:listener-config name="HTTP_Listener_Configuration2" host="0.0.0.0" port="8087" doc:name="HTTP Listener Configuration"/>
    <http:listener-config name="HTTP_Listener_Configuration3" host="0.0.0.0" port="8093" basePath="testGetToken" doc:name="HTTP Listener Configuration"/>
    <http:listener-config name="HTTP_Listener_Configuration4" host="0.0.0.0" port="8099" doc:name="HTTP Listener Configuration"/>
    <http:request-config name="GetEventDetail"  host="${offering_api}" port="${manheim_api_port}" basePath="offerings/id/#[flowVars.idHref]" doc:name="HTTP Request Configuration" usePersistentConnections="false" >
        <http:basic-authentication username="duubmuahmy7hb4ftchnmnjcm" password="44fcTw2HdY111"/>
    
    </http:request-config>
    <http:request-builder name="Request_Builder" doc:name="Request Builder">
        <http:query-param paramName="Content-Type" value="application/x-www-form-urlencoded"/>
        <http:header headerName="Authorization" value="${token}"/>
        <http:header headerName="Cache-Control" value="no-cache"/>
    </http:request-builder>
    <http:request-config name="RentCentricHTTPConfig" host="${rentcentric_url}" port="443" basePath="/test" doc:name="HTTP Request Configuration"/>
    <sub-flow name="sendDataToRentCentric">
        <object-to-string-transformer doc:name="Object to String"/>
        <logger message="Sending to rent centric: payload" level="INFO" doc:name="Logger"/>
        <http:request config-ref="RentCentricHTTPConfig" path="/" method="POST" doc:name="HTTP"/>
        <logger message="permission to say DICK! #[payload]" level="INFO" doc:name="Logger"/>
    </sub-flow>
    <sub-flow name="processManheimOfferingPurchased">
        <logger message="Got Notified #[payload]  " level="INFO" doc:name="Logger"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:input-payload doc:sample="json.json"/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
%var name = "https://api.manheim.com/units/id/"
---
{
	status:payload.status,
	href:payload.unit.href 
}]]></dw:set-payload>
        </dw:transform-message>
        <set-variable variableName="idHref" value="#[payload.href.replace(&quot;https://api.manheim.com/units/id/&quot;,&quot;&quot;)]" doc:name="Variable"/>
        <logger message="whet is the payload? #[payload.href] #[payload.status] flowwwww #[flowVars.idHref]" level="INFO" doc:name="Logger"/>
        <byte-array-to-string-transformer doc:name="Byte Array to String"/>
        <http:request config-ref="GetEventDetail" path="/" method="GET" doc:name="GetEventDetails">
            <http:request-builder>
            </http:request-builder>
        </http:request>
        <object-to-string-transformer doc:name="Object to String"/>
        <logger message="#[payload]  raaaaaaaaaaaa" level="INFO" doc:name="Logger"/>
    </sub-flow>
    <flow name="manheimPurchaseListenerFlow">
        <http:listener config-ref="Manheim_listener" path="/" metadata:id="c9e59a6e-484e-45dd-84da-a8320fa3d8e1" doc:name="HTTP"/>
        <flow-ref name="processManheimOfferingPurchased" doc:name="getManheimPurchaseDetails"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:input-payload doc:sample="json_1.json"/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
[{
	VehicleID: "????",
	Year: payload.description.modelYear,
	Make: payload.description.make,
	Model: payload.description.model,
	VehicleType:payload.type,
	VINNumber: payload.vin,
	Status: "????",
	Odometer: payload.odometer.reading,
	OriginalOdometer: "????",
	Colour:payload.description.exteriorColor.code,
	Price: "????",
	LicenseNumber: payload.title.number,
	LicenseExpiry: "????",
	LicenseState: payload.title.state,
	TankSize: "????",
	Memo: "????",
	Doors: payload.description.doorCount,
	FuelLevel: "????",
	FuelType: payload.description.engine.fuel,
	Transmission: payload.description.transmission,
	Body: "????",
	ServiceInterval: "????",
	Active: "????"
}]]]></dw:set-payload>
        </dw:transform-message>
        <flow-ref name="sendDataToRentCentric" doc:name="sendDatatoRentCentric" metadata:id="dd2148ce-21c9-4880-9868-e9d983b28e5f"/>

        <catch-exception-strategy doc:name="Catch Exception Strategy">
            <logger message="There is an exception #[message]" level="INFO" doc:name="Logger"/>
        </catch-exception-strategy>
    </flow>
    <flow name="getAccessToken">
        <http:listener config-ref="HTTP_Listener_Configuration3" path="/" doc:name="HTTP"/>
        <logger message="test get token" level="INFO" doc:name="Logger"/>
    <set-payload
            value="{&quot;grant_type&quot;:&quot;client_credentials&quot;}"
            doc:name="Set Payload"/>
    <logger 
            message="Message before request for access token with payload #[payload]" level="INFO"
            doc:name="Logger"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <logger message="#[payload]" level="INFO" doc:name="Logger"/>
    <http:request config-ref="HTTP_Request_Configuration1" doc:name="Query user resource using token" parseResponse="false"
                  method="POST"
                  path="/">
        <http:request-builder>
                <http:header headerName="Content-Type" value="application/json"/>

        </http:request-builder>
    </http:request>
    <logger category="getAccessToken"
            message="Message after request for access token  #[message]" level="DEBUG"
            doc:name="Logger"/>
</flow>

</mule>
