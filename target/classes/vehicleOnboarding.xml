<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:file="http://www.mulesoft.org/schema/mule/file"
      xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw"
      xmlns:quartz="http://www.mulesoft.org/schema/mule/quartz"
      xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
      xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
      xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking"
      xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:tls="http://www.mulesoft.org/schema/mule/tls"
      xmlns:http="http://www.mulesoft.org/schema/mule/http"
      xmlns:json="http://www.mulesoft.org/schema/mule/json"
      xmlns:jms="http://www.mulesoft.org/schema/mule/jms"
      xmlns:objectstore="http://www.mulesoft.org/schema/mule/objectstore"
      xmlns:mulerequester="http://www.mulesoft.org/schema/mule/mulerequester"
      xmlns:spring="http://www.springframework.org/schema/beans"
      xmlns:context="http://www.springframework.org/schema/context"
      xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/tls http://www.mulesoft.org/schema/mule/tls/current/mule-tls.xsd
http://www.mulesoft.org/schema/mule/mulerequester http://www.mulesoft.org/schema/mule/mulerequester/current/mule-mulerequester.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/jms http://www.mulesoft.org/schema/mule/jms/current/mule-jms.xsd
http://www.mulesoft.org/schema/mule/objectstore http://www.mulesoft.org/schema/mule/objectstore/current/mule-objectstore.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
http://www.mulesoft.org/schema/mule/quartz http://www.mulesoft.org/schema/mule/quartz/current/mule-quartz.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd"
      version="EE-3.7.0">

    <spring:beans>
        <context:annotation-config/>
        <context:property-placeholder location="classpath:${FlexEnv}/${FlexEnv}.properties"/>
        <spring:import resource="mongoConfig.xml"/>
        <spring:bean id="sampleJSON" class="java.lang.String">
            <spring:constructor-arg>
                <spring:bean class="org.springframework.util.FileCopyUtils" factory-method="copyToByteArray">
                    <spring:constructor-arg value="classpath:mock/sampleUnitInfo.json" type="java.io.InputStream"/>
                </spring:bean>
            </spring:constructor-arg>
        </spring:bean>
        <spring:bean id="jsonParser" class="org.json.simple.parser.JSONParser"/>
        <spring:bean id="unitInfoToWriterTransformer" class="com.ca.flex.transformer.UnitInfoToWriterTransformer"/>

    </spring:beans>

    <http:listener-config name="httpConfig" host="0.0.0.0" port="${http.port}" protocol="HTTP"
                          doc:name="HTTP Listener Configuration">
    </http:listener-config>

    <flow name="purchaseEventListenerFlow">
        <http:listener config-ref="httpConfig" doc:name="User data" path="purchaseEvent" allowedMethods="POST"/>
        <json:json-to-object-transformer returnClass="java.util.TreeMap" doc:name="JSON to Object"/>
        <logger level="INFO" category="purchaseEventListenerFlow" message="Message received with #[payload]"/>
        <set-property propertyName="collection" value="OFFERINGS.PURCHASED"/>
        <flow-ref name="persistEventData"/>
    </flow>

    <flow name="maintenanceEventListenerFlow">
        <http:listener config-ref="httpConfig" doc:name="User data" path="maintenanceEvent" allowedMethods="POST"/>
        <json:json-to-object-transformer returnClass="java.util.TreeMap" doc:name="JSON to Object"/>
        <logger level="INFO" category="purchaseEventListenerFlow" message="Message received with #[payload]"/>
        <set-property propertyName="collection" value="MAINTENANCE.EVENT"/>
        <flow-ref name="persistEventData"/>
    </flow>

    <sub-flow name="persistEventData">
        <set-payload value="#[new org.bson.Document(payload)]"/>
        <component doc:name="Java" class="com.ca.flex.component.PersistEventComponent"/>
        <set-payload value="#[payload.toJson()]"/>
    </sub-flow>

    <flow name="dailyFlexdrivePurchasesFlow" processingStrategy="synchronous">
        <quartz:inbound-endpoint jobName="eventTimer" doc:name="Quartz"
                                 cronExpression="${pollManheimEvents}">
            <quartz:event-generator-job>
                <quartz:payload>start</quartz:payload>
            </quartz:event-generator-job>
        </quartz:inbound-endpoint>
        <logger message="running batch on schedule on" level="INFO" category="purchaseEventListenerFlow"
                doc:name="Logger"/>
        <component doc:name="Java" class="com.ca.flex.component.GetPurchaseEventsComponent"/>
        <set-variable variableName="documents" value="#[new java.util.ArrayList()]"/>
        <foreach collection="#[payload]">
            <expression-component doc:name="Message to encryptor">
                <![CDATA[flowVars.documents.add(payload);]]></expression-component>
        </foreach>
        <logger category="dailyFlexdrivePurchasesFlow" message="Documents #[flowVars['documents']]"
                level="INFO"/>
        <logger category="dailyFlexdrivePurchasesFlow" level="INFO" message="Batch Run completed" doc:name="Logger"/>
    </flow>

    <choice-exception-strategy name="choiceExceptionForSF">
        <catch-exception-strategy doc:name="Catch Exception Strategy">
            <logger category="choiceExceptionForSF" message="Message in Exception #[exception]" level="INFO"
                    doc:name="Logger"/>
            <set-variable variableName="exceptionMessage" value="#[exception]" doc:name="Variable"/>
            <set-variable variableName="exceptionCode" value="UNKWONN" doc:name="Variable"/>
        </catch-exception-strategy>
    </choice-exception-strategy>
</mule>
